name: Java CI

on:
  push:
    tags:
    - '*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
            
    - name: Set vars
      id: vars
      run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\/v/}
    
    - name: Checkout Streamsets
      uses: actions/checkout@v2.0.0
      with:
        repository: streamsets/datacollector-oss
        ref: 3.15.0
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven

    - name: Fix maven repository path
      run: sed -i 's#http://packages.confluent.io/maven/#https://packages.confluent.io/maven/#g' pom.xml

    - name: Build streamsets httpcommonlib
      run: mvn -pl httpcommonlib -am clean install -DskipTests
    
    - uses: actions/checkout@v2.0.0
    
    - name: Build with Maven
      run: mvn install package -DskipTests
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./target/anodot-${{ steps.vars.outputs.version }}.tar.gz
        asset_name: anodot-${{ steps.vars.outputs.version }}.tar.gz
        asset_content_type: application/gzip
